<div class="container my-4">
    <div class="row justify-content-center">
        <div class="dropdown mb-4">
            <button class="btn date-pill shadow-sm dropdown-toggle" type="button" id="periodDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                <!-- Exibe o mês/ano selecionado -->
                {{#each meses}}
                    {{#if (eq ../mesAtual this.valor)}}
                        {{this.nome}}
                    {{/if}}
                {{/each}}
                {{anoAtual}}
            </button>

            <div class="dropdown-menu dropdown-menu-end date-picker-popup p-0" aria-labelledby="periodDropdown">
                <div class="date-picker-header text-center py-2">
                    <h6 class="mb-0">Selecione o Período</h6>
                </div>

                <form method="GET" action="/financas/dashboard" class="p-3">
                    <!-- Grid de meses compacto com abreviações -->
                    <div class="month-grid mb-3">
                        {{#each meses}}
                            <label class="month-item {{#if (eq ../mesAtual this.valor)}}selected{{/if}}">
                                <input type="radio" name="mes" value="{{this.valor}}" {{#if (eq ../mesAtual this.valor)}}checked{{/if}} class="visually-hidden">
                                <span class="month-label">
                                    {{substring this.nome 0 3}}
                                </span>
                            </label>
                        {{/each}}
                    </div>

                    <!-- Seletor de ano compacto -->
                    <div class="year-selector d-flex align-items-center justify-content-center mb-3">
                        <button type="button" class="btn btn-sm btn-light year-btn" onclick="decrementYear()">
                            <i class="bi bi-chevron-left"></i>
                        </button>
                        <input type="number" name="ano" id="ano" value="{{anoAtual}}" 
                            class="form-control form-control-sm text-center mx-2" 
                            min="2000" max="2100" style="width: 80px;" />
                        <button type="button" class="btn btn-sm btn-light year-btn" onclick="incrementYear()">
                            <i class="bi bi-chevron-right"></i>
                        </button>
                    </div>

                    <!-- Botões de ação -->
                    <div class="d-flex justify-content-between mt-3 pt-2 border-top">
                        <a href="/financas/dashboard" class="btn btn-sm btn-light">
                            Resetar
                        </a>
                        <button type="submit" class="btn btn-sm btn-primary">
                            Aplicar
                        </button>
                    </div>
                </form>
            </div>
        </div>
        <!-- Título -->
        <div class="col-12 mb-4">
            <h2 class="text-dark fw-bold">Dashboard</h2>
        </div>

        <!-- Card Saldo -->
        <div class="col-md-6 col-lg-3 mb-3">
            <div class="card shadow rounded-4 p-4 text-dark bg-light">
                <div class="d-flex align-items-center">
                    <div class="p-3 rounded-circle bg-light me-3">
                        <i class="bi bi-wallet2 fs-2 text-primary"></i>
                    </div>
                    <div>
                        <h5 class="m-0">Saldo</h5>
                        <h4 class="fw-bold text-success">R$ {{saldo}}</h4>
                        <a href="/financas/saldo" class="stretched-link"></a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Card Receitas -->
        <div class="col-md-6 col-lg-3 mb-3">
            <div class="card shadow rounded-4 p-4 text-dark bg-light">
                <div class="d-flex align-items-center">
                    <div class="p-3 rounded-circle bg-light me-3">
                        <i class="bi bi-graph-up-arrow fs-2 text-success"></i>
                    </div>
                    <div>
                        <h5 class="m-0">Receitas</h5>
                        <h4 class="fw-bold text-success">R$ {{totalReceitas}}</h4>
                        <a href="/financas/viewReceitas" class="stretched-link"></a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Card Despesas -->
        <div class="col-md-6 col-lg-3 mb-3">
            <div class="card shadow rounded-4 p-4 text-dark bg-light">
                <div class="d-flex align-items-center">
                    <div class="p-3 rounded-circle bg-light me-3">
                        <i class="bi bi-cash-stack fs-2 text-danger"></i>
                    </div>
                    <div>
                        <h5 class="m-0">Despesas</h5>
                        <h4 class="fw-bold text-success">R$ {{totalDespesas}}</h4>
                        <a href="/financas/viewDespesas" class="stretched-link"></a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Card Cartão de Crédito -->
        <div class="col-md-6 col-lg-3 mb-3">
            <div class="card shadow rounded-4 p-4 text-dark bg-light">
                <div class="d-flex align-items-center">
                    <div class="p-3 rounded-circle bg-light me-3">
                        <i class="bi bi-credit-card fs-2 text-warning"></i>
                    </div>
                    <div>
                        <h5 class="m-0">Cartão de Crédito</h5>
                        <h4 class="fw-bold text-success">R$ {{totalCartao}}</h4>
                        <a href="/financas/viewCartaos" class="stretched-link"></a>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt-4">
    <div class="col-12">
        <h4 class="text-dark fw-bold text-center mb-4">Recomendações para você</h4>
    </div>

    <div class="col-12 mb-4">
        <div class="card shadow-lg rounded-4 p-4">
            <div class="card-body text-center">
                
                <h3 class="card-title fw-bold mb-3">{{linkExibido.titulo}}</h3>
                <p class="card-text fs-5 text-muted mb-4">{{linkExibido.descricao}}</p>
                <a href="{{linkExibido.url}}" target="_blank" class="btn btn-lg btn-primary px-5">Saiba mais</a>
            </div>
        </div>
    </div>
</div>
        <div class="container-fluid py-4">
            <div class="col-12 text-center mt-3 mb-4">
                <h4 class="text-primary fw-bold">Suas Finanças</h4>
            </div>
            <div class="row">

                
                <!-- Gráfico de Receitas -->
                <div class="col-md-4 mb-4">
                    <div class="card shadow rounded-4 overflow-hidden">
                        <div class="card-header bg-success text-white py-3">
                            <h5 class="card-title mb-0 text-center">Receitas</h5>
                        </div>
                        <div class="card-body p-4 position-relative">
                            <canvas id="graficoReceitas"></canvas>
                            <div id="receitasTotal" class="grafico-total">
                                <span class="grafico-label">Total</span>
                                <span class="grafico-valor">R$ 0,00</span>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Gráfico de Despesas -->
                <div class="col-md-4 mb-4">
                    <div class="card shadow rounded-4 overflow-hidden">
                        <div class="card-header bg-danger text-white py-3">
                            <h5 class="card-title mb-0 text-center">Despesas</h5>
                        </div>
                        <div class="card-body p-4 position-relative">
                            <canvas id="graficoDespesas"></canvas>
                            <div id="despesasTotal" class="grafico-total">
                                <span class="grafico-label">Total</span>
                                <span class="grafico-valor">R$ 0,00</span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Gráfico de Cartões -->
                <div class="col-md-4 mb-4">
                    <div class="card shadow rounded-4 overflow-hidden">
                        <div class="card-header bg-warning text-dark py-3">
                            <h5 class="card-title mb-0 text-center">Cartão de Crédito</h5>
                        </div>
                        <div class="card-body p-4 position-relative">
                            <canvas id="graficoCartoes"></canvas>
                            <div id="cartoesTotal" class="grafico-total">
                                <span class="grafico-label">Total</span>
                                <span class="grafico-valor">R$ 0,00</span>
                            </div>
                        </div>
                    </div>
                </div>

      
                <!-- Gráfico Geral -->
                <div class="col-md-8">
                    <div class="card shadow rounded-4 overflow-hidden h-100">
                        <div class="card-header bg-info text-white py-3">
                            <h5 class="card-title mb-0 text-center">Resumo Geral</h5>
                        </div>
                        <div class="card-body p-4 position-relative">
                            <canvas id="graficoGeral"></canvas>
                            <div id="geralTotal" class="grafico-total">
                                <span class="grafico-label">Total</span>
                                <span class="grafico-valor">R$ 0,00</span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Informações Extras -->
                <div class="col-md-4">
                    <div class="card shadow rounded-4 p-4 text-dark bg-light h-100">
                        <h5 class="card-title text-center mb-3">Informações do Mês</h5>
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item d-flex justify-content-between">
                                <span>Saldo Inicial:</span>
                                <span class="fw-bold text-primary">R$ {{saldoInicial}}</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between">
                                <span>Total de Receitas:</span>
                                <span class="fw-bold text-success">R$ {{totalReceitas}}</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between">
                                <span>Total de Despesas:</span>
                                <span class="fw-bold text-danger">R$ {{totalDespesas}}</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between">
                                <span>Balanço Final:</span>
                                <span class="fw-bold text-info">R$ {{saldo}}</span>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
 

    
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
   document.addEventListener("DOMContentLoaded", function() {
    const despesas = JSON.parse('{{{despesas}}}');
    const receitas = JSON.parse('{{{receitas}}}');
    const cartoes = JSON.parse('{{{cartoes}}}');
    const graficoGeralData = JSON.parse('{{{graficoGeral}}}');

    const despesasTotalEl = document.getElementById('despesasTotal').querySelectorAll('span');
    const receitasTotalEl = document.getElementById('receitasTotal').querySelectorAll('span');
    const cartoesTotalEl = document.getElementById('cartoesTotal').querySelectorAll('span');
    const geralTotalEl = document.getElementById('geralTotal').querySelectorAll('span');

    const formatarReais = valor => 'R$ ' + parseFloat(valor).toFixed(2).replace('.', ',');

    const totalDespesas = despesas.reduce((total, d) => total + parseFloat(d.valor || 0), 0);
    const totalReceitas = receitas.reduce((total, r) => total + parseFloat(r.valor || 0), 0);
    const totalCartoes = cartoes.reduce((total, c) => total + parseFloat(c.valor || 0), 0);

    despesasTotalEl[1].textContent = formatarReais(totalDespesas);
    receitasTotalEl[1].textContent = formatarReais(totalReceitas);
    cartoesTotalEl[1].textContent = formatarReais(totalCartoes);

    const opcoesPie = {
        responsive: true,
        maintainAspectRatio: false,
        cutout: '60%',
        plugins: {
            legend: { display: false }, // Oculta a legenda
            tooltip: { enabled: false } // Desativa o tooltip padrão
        },
        layout: { padding: { left: 0, right: 0, top: 20, bottom: 20 } }
    };
    const criarGrafico = (ctx, dados, cores) => new Chart(ctx, {
        type: 'doughnut',
        data: {
            labels: dados.map(d => d.nome),
            datasets: [{
                data: dados.map(d => parseFloat(d.valor || 0)),
                backgroundColor: cores, // Define as cores do gráfico
                porcentagens: dados.map(d => parseFloat(d.porcentagem || 0))
            }]
        },
        options: opcoesPie
    });

    // Definir cores específicas para cada gráfico
    const coresDespesas = ['#FF5733', '#C70039', '#900C3F', '#FFC300']; // Vermelhos e amarelos
    const coresReceitas = ['#4CAF50', '#8BC34A', '#03A9F4', '#2196F3']; // Verdes e azuis
    const coresCartoes = ['#FFC107', '#FFD54F', '#FFEB3B', '#FFF176']; // Tons de amarelo
    const coresGeral = ['#4CAF50', '#FF5733', '#FFC300']; // Já está definido

    // Criar os gráficos com as cores específicas
    const graficoDespesas = criarGrafico(document.getElementById('graficoDespesas').getContext('2d'), despesas, coresDespesas);
    const graficoReceitas = criarGrafico(document.getElementById('graficoReceitas').getContext('2d'), receitas, coresReceitas);
    const graficoCartoes = criarGrafico(document.getElementById('graficoCartoes').getContext('2d'), cartoes, coresCartoes);
    const graficoGeral = criarGrafico(document.getElementById('graficoGeral').getContext('2d'), graficoGeralData, coresGeral);
    const configurarEventosHover = (canvasId, chart, totalEl, totalValor) => {
        document.getElementById(canvasId).addEventListener('mousemove', function(e) {
            const elements = chart.getElementsAtEventForMode(e, 'nearest', { intersect: true }, false);
            if (elements.length > 0) {
                const index = elements[0].index;
                const categoria = chart.data.labels[index]; // Nome da categoria
                const valor = chart.data.datasets[0].data[index]; // Valor da categoria
                const porcentagem = chart.data.datasets[0].porcentagens[index]; // Porcentagem da categoria

                totalEl[0].textContent = categoria; // Exibe o nome da categoria
                totalEl[1].textContent = formatarReais(valor); // Exibe o valor

                // Verifica se o elemento de porcentagem já existe
                let porcentagemEl = totalEl[1].parentNode.querySelector('.grafico-porcentagem');
                if (!porcentagemEl) {
                    // Cria o elemento de porcentagem se não existir
                    porcentagemEl = document.createElement('span');
                    porcentagemEl.className = 'grafico-porcentagem';
                    porcentagemEl.style.fontSize = '16px'; // Aumenta o tamanho da fonte
                    porcentagemEl.style.color = '#333';
                    porcentagemEl.style.display = 'block'; // Garante que seja exibido como um bloco
                    porcentagemEl.style.marginTop = '5px'; // Adiciona um espaçamento
                    totalEl[1].parentNode.appendChild(porcentagemEl);
                }

                // Atualiza o texto da porcentagem
                porcentagemEl.textContent = `${porcentagem.toFixed(2)}%`;
            } else {
                // Restaura o texto "Total" e o valor total
                totalEl[0].textContent = 'Total';
                totalEl[1].textContent = formatarReais(totalValor);
                
                // Remove a porcentagem, se existir
                const porcentagemEl = totalEl[1].parentNode.querySelector('.grafico-porcentagem');
                if (porcentagemEl) {
                    porcentagemEl.remove();
                }
            }
        });

        document.getElementById(canvasId).addEventListener('mouseout', function() {
            // Restaura o texto "Total" e o valor total
            totalEl[0].textContent = 'Total';
            totalEl[1].textContent = formatarReais(totalValor);

            // Remove a porcentagem, se existir
            const porcentagemEl = totalEl[1].parentNode.querySelector('.grafico-porcentagem');
            if (porcentagemEl) {
                porcentagemEl.remove();
            }
        });
    };

    configurarEventosHover('graficoDespesas', graficoDespesas, despesasTotalEl, totalDespesas);
    configurarEventosHover('graficoReceitas', graficoReceitas, receitasTotalEl, totalReceitas);
    configurarEventosHover('graficoCartoes', graficoCartoes, cartoesTotalEl, totalCartoes);
    configurarEventosHover('graficoGeral', graficoGeral, geralTotalEl, totalDespesas + totalReceitas + totalCartoes);

    function incrementYear() {
        const yearInput = document.getElementById('ano');
        if (yearInput) {
            let currentYear = parseInt(yearInput.value);
            if (!isNaN(currentYear) && currentYear < 2100) {
                yearInput.value = currentYear + 1;
            }
        }
    }

    function decrementYear() {
        const yearInput = document.getElementById('ano');
        if (yearInput) {
            let currentYear = parseInt(yearInput.value);
            if (!isNaN(currentYear) && currentYear > 2000) {
                yearInput.value = currentYear - 1;
            }
        }
    }
});
document.addEventListener('DOMContentLoaded', function () {
        const monthItems = document.querySelectorAll('.month-item');

        monthItems.forEach(function (item) {
            item.addEventListener('click', function () {
                // Remove a classe 'selected' de todos os meses
                monthItems.forEach(function (el) {
                    el.classList.remove('selected');
                });

                // Adiciona a classe 'selected' ao mês clicado
                this.classList.add('selected');
            });
        });
    });

document.addEventListener('DOMContentLoaded', function () {
  document.querySelectorAll('.dropdown-menu').forEach(function (dropdown) {
    dropdown.addEventListener('click', function (e) {
      e.stopPropagation(); // Impede o fechamento do dropdown
    });
  });
});

</script>